generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = "mongodb+srv://phonix:node1234@cluster0-ttp8q.mongodb.net/atysashop?retryWrites=true&w=majority"
}

type ProductsMaterials {
  name   String
  weight String
}

model Category {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  description String?
  image       String?
  name        String
  slug        String
  isActive    Boolean   @default(true)
  created_at  DateTime? @default(now()) @db.Date
  updated_at  DateTime? @updatedAt() @db.Date

  products    Product[] @relation(fields: [product_ids], references: [id])
  product_ids String[]  @db.ObjectId

  @@unique([slug])
  @@map("categories")
}

model Product {
  id          String              @id @default(auto()) @map("_id") @db.ObjectId
  calory      Int?
  description String?
  image       String
  isPromoted  String?
  materials   ProductsMaterials[]
  name        String
  slug        String
  price       Int
  size        String?
  created_at  DateTime            @default(now()) @db.Date
  updated_at  DateTime            @updatedAt() @db.Date

  categories  Category[] @relation(fields: [categoryIds], references: [id])
  categoryIds String[]   @db.ObjectId

  @@unique([slug])
  @@map("products")
}

model User {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  code        String
  phonenumber String
  name        String?
  role        Role      @default(USER)
  created_at  DateTime  @default(now()) @db.Date
  updated_at  DateTime  @updatedAt() @db.Date
  Session     Session[]

  @@unique([phonenumber])
    @@map("users")
}

enum Role {
  USER
  ADMIN
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}
